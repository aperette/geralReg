install.packages(c("devtools", "roxygen2", "testthat", "knitr"))
help(nls)
help(optim)
help(sample_n)
source('C:/Users/aperette/Desktop/pacote/geralReg/R/auxi.R', encoding = 'UTF-8', echo=TRUE)
devtools::check("DESCRIPTION")
devtools::check()
devtools::check()
devtools::check()
library(geralReg)
devtools::install_local("..\geralReg")
devtools::install_local("../geralReg")
help("reg_geral")
teste=function(x,...){
UseMethod("teste")
}
teste.a=function(y){y*2}
teste.b=function(y){y/2}
teste.print=function(y){cat("DEU CERTO")}
teste=function(x,...){
UseMethod("teste")
}
teste(5)
print.lm
library(geralReg)
library(geralReg)
library(geralReg)
library(geralReg)
library(geralReg)
(1:5) %>% sum
library(geralReg)
library(geralReg)
library(geralReg)
x <- geralReg::reg_geral(formula = mpg~alfa + beta*disp,
formula_var = ~(sigma),
prop=0.1,data=mtcars,verbose=2)
summary(x)
class(x)
x
require(geralReg)
x
summary(x)
predict(x)
devtools::document
devtools::document()
library(geralReg)
summary(x)
library(geralReg)
summary(x)
summary.lm
lm(mpg~disp,mtcars)
lm(mpg~disp,mtcars)$df.resi
lm(mpg~disp,mtcars)$df.residuak
lm(mpg~disp,mtcars)$df.residual
dglm::dglm(formula = mpg~disp,dformula = ~1,mtcars)$df.residual
dglm::dglm(formula = mpg~disp,dformula = ~1,mtcars)
help(dglm)
dglm::dglm(formula = mpg~disp,dformula = ~1,mtcars,family = stats::gaussian)
dglm::dglm(formula = mpg~disp,dformula = ~1,data=mtcars)
dglm::dglm(formula = mpg~disp,dformula = ~1,data=mtcars)$df.res
dglm::dglm(formula = mpg~disp,dformula = ~disp,data=mtcars)$df.res
dglm::dglm(formula = mpg~disp,dformula = ~disp,data=mtcars)
y=dglm::dglm(formula = mpg~disp,dformula = ~disp,data=mtcars)
y$df.residual
y$coefficients
y$fitted.values
y$df.null
summary(y)
library(geralReg)
summary(x)
summary.lm
library(geralReg)
summary(x)
